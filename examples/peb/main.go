package main

import (
	"github.com/osonkr/malware-development/win32"
)

const XORKey = 0xc

func xor(s string) string {
	n := make([]byte, len(s))
	for i := range s {
		n[i] = s[i] ^ XORKey
	}
	return string(n)
}

func main() {
	//k32dll, _ := hex.DecodeString("67697e6269603f3e22686060")

	handle := win32.GetModuleHandle("ntdll.dll", nil)
	_ = win32.GetProc(handle, "NtYieldExecution", nil)

	//fmt.Printf("OG Syscall: %x\n", ntYieldExecution.SyscallId)
	//
	//win32.AttemptHalosGate(ntYieldExecution.Addr, 32)

	//proc, err := win32.GetProcFromDisk("ntdll.dll", "NtYieldExecution", nil)
	//if err != nil {
	//	panic(err)
	//}
	//
	//fmt.Println(proc)

}
