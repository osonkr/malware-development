package win32

import (
	"bytes"
	"github.com/gonutz/w32/v2"
	"reflect"
	"syscall"
	"unsafe"
)

const ERROR_SUCCESS = "The operation completed successfully."

type (
	BOOLEAN = byte
	BOOL = int32
	BYTE = byte
	DWORD = uint32
	DWORD32 = uint32
	DWORD64 = uint64
	WORD = uint16
	HANDLE = uintptr
	LPVOID = uintptr
	SIZE_T = uintptr
	LPCVOID = uintptr
	PVOID = uintptr
	HMODULE = uintptr
	LPCSTR = uintptr
	LPDWORD = uintptr
	USHORT = uint16
	NULL_REF = int
	ULONG = uint64
)

const (
	// docs.microsoft.com/en-us/windows/desktop/ProcThread/process-security-and-access-rights
	PROCESS_CREATE_PROCESS = 0x0080
	PROCESS_CREATE_THREAD = 0x0002
	PROCESS_DUP_HANDLE = 0x0040
	PROCESS_QUERY_INFORMATION = 0x0400
	PROCESS_QUERY_LIMITED_INFORMATION = 0x1000
	PROCESS_SET_INFORMATION = 0x0200
	PROCESS_SET_QUOTA = 0x0100
	PROCESS_SUSPEND_RESUME = 0x0800
	PROCESS_TERMINATE = 0x0001
	PROCESS_VM_OPERATION = 0x0008
	PROCESS_VM_READ = 0x0010
	PROCESS_VM_WRITE = 0x0020
	PROCESS_ALL_ACCESS = 0x001F0FFF

	//https://docs.microsoft.com/en-us/windows/win32/memory/memory-protection-constants
	PAGE_EXECUTE = 0x10
	PAGE_EXECUTE_READ = 0x20
	PAGE_EXECUTE_READWRITE = 0x40

	MEM_COMMIT = 0x00001000
	MEM_RESERVE = 0x00002000
	MEM_RESET = 0x00080000
	MEM_RESET_UNDO = 0x1000000

	// https://docs.microsoft.com/en-us/windows/win32/api/memoryapi/nf-memoryapi-virtualfree
	MEM_DECOMMIT = 0x00004000
	MEM_RELEASE = 0x00008000

	)

type SECURITY_ATTRIBUTES struct {
	NLength DWORD
	LpSecurityDescriptor LPVOID
	BInheritHandle BOOL
}

type PEB struct {
	reserved1              [2]byte
	BeingDebugged          byte
	BitField               byte
	reserved3              uintptr
	ImageBaseAddress       uintptr
	Ldr                    *PEB_LDR_DATA
	ProcessParameters      *RTL_USER_PROCESS_PARAMETERS
	reserved4              [3]uintptr
	AtlThunkSListPtr       uintptr
	reserved5              uintptr
	reserved6              uint32
	reserved7              uintptr
	reserved8              uint32
	AtlThunkSListPtr32     uint32
	reserved9              [45]uintptr
	reserved10             [96]byte
	PostProcessInitRoutine uintptr
	reserved11             [128]byte
	reserved12             [1]uintptr
	SessionId              uint32
}

type PEB_LDR_DATA struct {
	reserved1               [8]byte
	reserved2               [3]uintptr
	InMemoryOrderModuleList LIST_ENTRY
}

type LIST_ENTRY struct {
	FLINK *LIST_ENTRY
	BLINK *LIST_ENTRY
}

type LDR_DATA_TABLE_ENTRY struct {
	reserved1          [2]uintptr
	InMemoryOrderLinks LIST_ENTRY
	reserved2          [2]uintptr
	DllBase            uintptr
	reserved3          [2]uintptr
	FullDllName        UNICODE_STRING
	BaseDllName		   UNICODE_STRING
}

type STRING struct {
	Length USHORT
	MaximumLength USHORT
	Buffer uintptr
}

type UNICODE_STRING struct {
	Length USHORT
	MaximumLength USHORT
	Buffer uintptr
}

func (uni UNICODE_STRING) ToString() string {
	buf := rawMemToSlice(uni.Buffer, int(uni.Length), int(uni.MaximumLength))
	buf = bytes.Replace(buf, []byte{0x00}, nil, -1)

	return string(buf)
}

func rawMemToSlice(ptr uintptr, length int, capacity int) []byte {
	if length <= 0 {
		return nil
	}

	sh := &reflect.SliceHeader{
		Data: ptr,
		Len:  length,
		Cap:  capacity,
	}

	bp := *(*[]byte)(unsafe.Pointer(sh))

	buf := make([]byte, length, capacity)

	copy(buf, bp)

	return buf
}

type RTL_USER_PROCESS_PARAMETERS struct {
	MaximumLength, Length uint32

	Flags, DebugFlags uint32

	ConsoleHandle                                uintptr
	ConsoleFlags                                 uint32
	StandardInput, StandardOutput, StandardError uintptr

	CurrentDirectory CURDIR
	DllPath          UNICODE_STRING
	ImagePathName    UNICODE_STRING
	CommandLine      UNICODE_STRING
	Environment      unsafe.Pointer

	StartingX, StartingY, CountX, CountY, CountCharsX, CountCharsY, FillAttribute uint32

	WindowFlags, ShowWindowFlags                     uint32
	WindowTitle, DesktopInfo, ShellInfo, RuntimeData UNICODE_STRING
	CurrentDirectories                               [32]RTL_DRIVE_LETTER_CURDIR

	EnvironmentSize, EnvironmentVersion uintptr

	PackageDependencyData unsafe.Pointer
	ProcessGroupId        uint32
	LoaderThreads         uint32

	RedirectionDllName               UNICODE_STRING
	HeapPartitionName                UNICODE_STRING
	DefaultThreadpoolCpuSetMasks     uintptr
	DefaultThreadpoolCpuSetMaskCount uint32
}

type RTL_DRIVE_LETTER_CURDIR struct {
	Flags     uint16
	Length    uint16
	TimeStamp uint32
	DosPath   STRING
}

type CURDIR struct {
	DosPath UNICODE_STRING
	Handle  PVOID
}

type IMAGE_DOS_HEADER struct {
	MagicNumber WORD
	BytesOnLastPageOfFile WORD
	PagesInFile WORD
	Relocations WORD
	SizeOfHeaderInParagraphs WORD
	MinExtraParagraphsNeeded WORD
	MaxExtraParagraphsNeeded WORD
	InitialRelSSValue WORD
	InitialSPValue WORD
	Checksum WORD
	InitialIPValue WORD
	InitialRelCSValue WORD
	FileAddrOfRelocTable WORD
	OverlayNumber WORD
	Reserved [4]WORD
	OEMID WORD
	OEMInfo WORD
	Reserved1 [10]WORD
	FileAddrNewEXEHeader DWORD
}

type IMAGE_NT_HEADER struct {
	Signature DWORD
	FileHeader IMAGE_FILE_HEADER
	OptionalHeader IMAGE_OPTIONAL_HEADER
}

type IMAGE_FILE_HEADER struct {
	Machine WORD
	NumberOfSections WORD
	TimeDateStamp DWORD
	PointerToSymbolTable DWORD
	NumberOfSymbols DWORD
	SizeOfOptionalHeader WORD
	Characteristics WORD
}

type IMAGE_OPTIONAL_HEADER struct {
	Magic                       uint16
	MajorLinkerVersion          uint8
	MinorLinkerVersion          uint8
	SizeOfCode                  uint32
	SizeOfInitializedData       uint32
	SizeOfUninitializedData     uint32
	AddressOfEntryPoint         uint32
	BaseOfCode                  uint32
	ImageBase                   uint64
	SectionAlignment            uint32
	FileAlignment               uint32
	MajorOperatingSystemVersion uint16
	MinorOperatingSystemVersion uint16
	MajorImageVersion           uint16
	MinorImageVersion           uint16
	MajorSubsystemVersion       uint16
	MinorSubsystemVersion       uint16
	Win32VersionValue           uint32
	SizeOfImage                 uint32
	SizeOfHeaders               uint32
	CheckSum                    uint32
	Subsystem                   uint16
	DllCharacteristics          uint16
	SizeOfStackReserve          uint64
	SizeOfStackCommit           uint64
	SizeOfHeapReserve           uint64
	SizeOfHeapCommit            uint64
	LoaderFlags                 uint32
	NumberOfRvaAndSizes         uint32
	DataDirectory               [16]IMAGE_DATA_DIRECTORY
}

const (
	IMAGE_DIRECTORY_ENTRY_EXPORT         = 0
	IMAGE_DIRECTORY_ENTRY_IMPORT         = 1
	IMAGE_DIRECTORY_ENTRY_RESOURCE       = 2
	IMAGE_DIRECTORY_ENTRY_EXCEPTION      = 3
	IMAGE_DIRECTORY_ENTRY_SECURITY       = 4
	IMAGE_DIRECTORY_ENTRY_BASERELOC      = 5
	IMAGE_DIRECTORY_ENTRY_DEBUG          = 6
	IMAGE_DIRECTORY_ENTRY_ARCHITECTURE   = 7
	IMAGE_DIRECTORY_ENTRY_GLOBALPTR      = 8
	IMAGE_DIRECTORY_ENTRY_TLS            = 9
	IMAGE_DIRECTORY_ENTRY_LOAD_CONFIG    = 10
	IMAGE_DIRECTORY_ENTRY_BOUND_IMPORT   = 11
	IMAGE_DIRECTORY_ENTRY_IAT            = 12
	IMAGE_DIRECTORY_ENTRY_DELAY_IMPORT   = 13
	IMAGE_DIRECTORY_ENTRY_COM_DESCRIPTOR = 14
)

type IMAGE_DATA_DIRECTORY struct {
	VirtualAddress uint32
	Size           uint32
}

type IMAGE_EXPORT_DIRECTORY struct {
	Characteristics uint32
	TimeDateStamp uint32
	MajorVersion uint16
	MinorVersion uint16
	NameRVA uint32
	Base uint32
	NumberOfFunctions uint32
	NumberOfNames uint32
	AddressOfFunctions uint32
	AddressOfNames uint32
	AddressOfNameOrdinals uint32
}

const (
	EXTENDED_STARTUPINFO_PRESENT = 0x00080000
	PROC_THREAD_ATTRIBUTE_MITIGATION_POLICY = 0x20007
	PROC_THREAD_ATTRIBUTE_PARENT_PROCESS = 0x00020000

	PROCESS_CREATION_MITIGATION_POLICY_BLOCK_NON_MICROSOFT_BINARIES_ALWAYS_ON = 0x0000100000000000
	PROCESS_CREATION_MITIGATION_POLICY_PROHIBIT_DYNAMIC_CODE_ALWAYS_ON = 0x0000001000000000


	PROCESS_INFO_CLASS_INSTRUMENTATION = 40
	)

type STARTUPINFOEXA struct {
	StartupInfo syscall.StartupInfo
	AttributeList *PROC_THREAD_ATTRIBUTE_LIST
}

type PROC_THREAD_ATTRIBUTE_LIST struct {
	_ [1]byte
}

type PROCESS_INSTRUMENTATION_CALLBACK_INFORMATION struct {
	Version ULONG
	Reserved ULONG
	Callback PVOID
}
